version: 2

project_name: fission
release:
  github:
    owner: sanketsudake
    name: fission
  prerelease: "true"
  draft: true
  header: |
    Release Highlights: https://fission.io/docs/releases/{{ .Tag }}/
    Install Guide: https://fission.io/docs/installation/
  extra_files:
    - glob: ./manifest/charts/*
    - glob: ./manifest/yamls/*

before:
  hooks:
    - go mod tidy
snapshot:
  version_template: "{{ .Tag }}"
builds:
  - &build-linux
    id: builder
    ldflags:
      - -s -w
      - -X github.com/fission/fission/pkg/info.GitCommit={{.ShortCommit}}
      - -X github.com/fission/fission/pkg/info.BuildDate={{.Date}}
      - -X github.com/fission/fission/pkg/info.Version={{.Tag}}
    gcflags:
      - all=-trimpath={{ if index .Env "GITHUB_WORKSPACE"}}{{ .Env.GITHUB_WORKSPACE }}{{ else }}{{ .Env.PWD }}{{ end }}
    asmflags:
      - all=-trimpath={{ if index .Env "GITHUB_WORKSPACE"}}{{ .Env.GITHUB_WORKSPACE }}{{ else }}{{ .Env.PWD }}{{ end }}
    env:
      - CGO_ENABLED=0
    goos:
      - linux
    goarch:
      - amd64
      - arm64
    binary: builder
    dir: ./cmd/builder
  - <<: *build-linux
    id: fetcher
    binary: fetcher
    dir: ./cmd/fetcher
  - <<: *build-linux
    id: fission-bundle
    binary: fission-bundle
    dir: ./cmd/fission-bundle
  - <<: *build-linux
    id: fission-cli
    goos:
      - linux
      - windows
      - darwin
    binary: fission
    dir: ./cmd/fission-cli
    ignore:
      - goos: windows
        goarch: arm64
  - <<: *build-linux
    id: pre-upgrade-checks
    binary: pre-upgrade-checks
    dir: ./cmd/preupgradechecks
  - <<: *build-linux
    id: reporter
    binary: reporter
    dir: ./cmd/reporter

kos:
  - &ko-linux
    id: builder
    build: builder
    repositories:
      - ghcr.io/sanketsudake/builder
      - docker.io/tripples/builder
    tags:
      - "{{.Tag}}"
      - latest
    platforms:
      - linux/amd64
      - linux/arm64
    sbom: spdx
    bare: true
    preserve_import_paths: false
    base_import_paths: false
    labels: &builder-labels
      org.opencontainers.image.description: "The builder assists in building the fission function source code for deployment."
      org.opencontainers.image.source: "{{.GitURL}}"
      org.opencontainers.image.created: "{{.Date}}"
      org.opencontainers.image.revision: "{{.FullCommit}}"
      org.opencontainers.image.version: "{{.Tag}}"
    annotations: *builder-labels
  - <<: *ko-linux
    id: fetcher
    build: fetcher
    repositories:
      - ghcr.io/sanketsudake/fetcher
      - docker.io/tripples/fetcher
    labels: &fetcher-labels
      org.opencontainers.image.description: "Fetcher is a lightweight component used by environment and builder pods. Fetcher helps in fetch and upload of source/deployment packages and specializing environments."
      org.opencontainers.image.source: "{{.GitURL}}"
      org.opencontainers.image.created: "{{.Date}}"
      org.opencontainers.image.revision: "{{.FullCommit}}"
      org.opencontainers.image.version: "{{.Tag}}"
    annotations: *fetcher-labels
  - <<: *ko-linux
    id: fission-bundle
    build: fission-bundle
    repositories:
      - ghcr.io/sanketsudake/fission-bundle
      - docker.io/tripples/fission-bundle
    labels: &fission-bundle-labels
      org.opencontainers.image.description: "fission-bundle is a component which is a single binary for all components. Most server side components running on server side are fission-bundle binary wrapped in container and used with different arguments."
      org.opencontainers.image.source: "{{.GitURL}}"
      org.opencontainers.image.created: "{{.Date}}"
      org.opencontainers.image.revision: "{{.FullCommit}}"
      org.opencontainers.image.version: "{{.Tag}}"
    annotations: *fission-bundle-labels
  - <<: *ko-linux
    id: pre-upgrade-checks
    build: pre-upgrade-checks
    repositories:
      - ghcr.io/sanketsudake/pre-upgrade-checks
      - docker.io/tripples/pre-upgrade-checks
    labels: &pre-upgrade-checks-labels
      org.opencontainers.image.description: "Preupgradechecks ensures that Fission is ready for the targeted version upgrade by performing checks beforehand."
      org.opencontainers.image.source: "{{.GitURL}}"
      org.opencontainers.image.created: "{{.Date}}"
      org.opencontainers.image.revision: "{{.FullCommit}}"
      org.opencontainers.image.version: "{{.Tag}}"
    annotations: *pre-upgrade-checks-labels
  - <<: *ko-linux
    id: reporter
    build: reporter
    repositories:
      - ghcr.io/sanketsudake/reporter
      - docker.io/tripples/reporter
    labels: &reporter-labels
      org.opencontainers.image.description: "The reporter gathers information that assists in improving fission."
      org.opencontainers.image.source: "{{.GitURL}}"
      org.opencontainers.image.created: "{{.Date}}"
      org.opencontainers.image.revision: "{{.FullCommit}}"
      org.opencontainers.image.version: "{{.Tag}}"
    annotations: *reporter-labels

changelog:
  disable: true
archives:
  - id: fission
    builds:
      - fission-cli
    name_template: "{{ .ProjectName }}-{{ .Tag }}-{{ .Os }}-{{ .Arch }}"
    format: binary
checksum:
  name_template: "checksums.txt"
  algorithm: sha256

# signs the checksum file
# https://goreleaser.com/customization/sign
signs:
  - id: cosign-binary
    env:
      - COSIGN_EXPERIMENTAL=1
    certificate: "${artifact}.pem"
    cmd: cosign
    artifacts: binary
    args:
      - sign-blob
      - "--output-signature=${signature}"
      - "--output-certificate=${certificate}"
      - "${artifact}"
      - "--yes" # needed for cosign 2.0.0+

# signs our docker image
# https://goreleaser.com/customization/docker_sign
docker_signs:
  - cmd: cosign
    env:
      - COSIGN_EXPERIMENTAL=1
    artifacts: all
    args:
      - sign
      - "${artifact}"
      - "--yes" # needed for cosign 2.0.0+
sboms:
  - artifacts: archive
    id: archive
  - artifacts: source
    id: source
  - artifacts: binary
    id: binary
  - artifacts: package
    id: package
