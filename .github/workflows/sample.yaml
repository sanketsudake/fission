name: "Sample Workflow"
on:
    workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      ghcr_images: ${{ steps.image.outputs.ghcr_images }}
    steps:
    - name: "Checkout Repository"
      uses: actions/checkout@v3
    - name: "Run a Command"
      run: echo "Hello from the workflow!"
    - name: Image digest
      id: image
      run: |
        set -euo pipefail
        image_and_digest=$(cat .github/workflows/artifacts.json | jq -r '.[] | select (.type=="Docker Manifest") | {name, "digest": (.extra.Digest // .extra.Checksum)} | select(.digest) | {name} + {digest} | join("@") | sub("^sha256:";"")' | grep -v latest)
        ghcr_images=$(echo "${image_and_digest}" | grep ghcr.io | jq -R -s -c '
          split("\n")
          | map(select(. != ""))
          | map(
              split("@")
              | {
                  "image": .[0] | split(":")[0],
                  "checksum": .[1]
                }
            )')

        echo "ghcr_images=$ghcr_images" >> "$GITHUB_OUTPUT"
        # docker_images=$(echo "${image_and_digest}" | grep -v ghcr.io | jq -R -s -c '
        #   split("\n")
        #   | map(select(. != ""))
        #   | map(
        #       split("@")
        #       | {
        #           "image": .[0] | split(":")[0],
        #           "checksum": .[1]
        #         }
        #     )')
        # echo "docker_images=$docker_images" >> "$GITHUB_OUTPUT"


  image-verifier:
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: ${{ fromJson(needs.build.outputs.ghcr_images) }}
    steps:
      - name: "Verify variables"
        env:
          IMAGE: ${{ fromJson(toJson(matrix)).image }}
          DIGEST: ${{ fromJson(toJson(matrix)).checksum }}
        run: |
          echo "Image: $IMAGE"
          echo "Digest: $DIGEST"
